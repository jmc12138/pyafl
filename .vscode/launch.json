{
    "version": "0.2.0",
    "configurations": [





 
        {
            "name": "aflnwe openssl",// 配置名称，将会在启动配置的下拉菜单中显示
            "type": "cppdbg",// 配置类型，这里只能为cppdbg
            "request": "launch",// 请求配置类型，可以为launch（启动）或attach（附加）
            "program": "${workspaceRoot}/afl-fuzz",// 将要进行调试的程序的路径
            "args": [
                "-d",
                "-i", "/home/ubuntu/experiments/in-tls",
                "-x", "/home/ubuntu/experiments/tls.dict",
                "-o", "/home/ubuntu/experiments/out-openssl-aflnwe",
                "-N", "tcp://127.0.0.1/4433",
                "-D", "10000",
                "-K",
                "-W", "30",
                "-t", "5000+",
                "-m", "none",
                "--", // 这是分隔符，表示后面的参数是传递给被测程序的
                "/home/ubuntu/experiments/openssl/apps/openssl",
                "s_server",
                "-key", "/home/ubuntu/experiments/openssl/key.pem",
                "-cert", "/home/ubuntu/experiments/openssl/cert.pem",
                "-4",
                "-naccept", "1",
                "-no_anti_replay"
            ],
            "stopAtEntry": true, // 设为true时程序将暂停在程序入口处，我一般设置为true
            "cwd": "${workspaceRoot}",// 调试程序时的工作目录
            "environment": [],// （环境变量？）
            "externalConsole": false,// 调试时是否显示控制台窗口，vscode自带控制台
            "MIMode": "gdb",// 指定连接的调试器，可以为gdb或lldb。
            //"preLaunchTask": "shell" // 调试会话开始前执行的任务，一般为编译程序。
            //与tasks.json的taskName相对应，可根据需求选择是否使用，本文不需要。
        },

        {
            "name": "afl-python openssl",// 配置名称，将会在启动配置的下拉菜单中显示
            "type": "cppdbg",// 配置类型，这里只能为cppdbg
            "request": "launch",// 请求配置类型，可以为launch（启动）或attach（附加）
            "program": "${workspaceRoot}/afl-python",// 将要进行调试的程序的路径
            "args": [
                "-d",
                "-i", "/home/ubuntu/experiments/in-tls",
                "-x", "/home/ubuntu/experiments/tls.dict",
                "-o", "/home/ubuntu/experiments/out-openssl-aflnwe",
                "-N", "tcp://127.0.0.1/4433",
                "-D", "10000",
                "-K",
                "-W", "100",
                "-t", "5000+",
                "-m", "none",
                "--", // 这是分隔符，表示后面的参数是传递给被测程序的
                "/home/ubuntu/experiments/openssl/apps/openssl",
                "s_server",
                "-key", "/home/ubuntu/experiments/openssl/key.pem",
                "-cert", "/home/ubuntu/experiments/openssl/cert.pem",
                "-4",
                "-naccept", "1",
                "-no_anti_replay"
            ],
            "stopAtEntry": true, // 设为true时程序将暂停在程序入口处，我一般设置为true
            "cwd": "${workspaceRoot}",// 调试程序时的工作目录
            "environment": [],// （环境变量？）
            "externalConsole": false,// 调试时是否显示控制台窗口，vscode自带控制台
            "MIMode": "gdb",// 指定连接的调试器，可以为gdb或lldb。
            //"preLaunchTask": "shell" // 调试会话开始前执行的任务，一般为编译程序。
            //与tasks.json的taskName相对应，可根据需求选择是否使用，本文不需要。
        }
    ]
}